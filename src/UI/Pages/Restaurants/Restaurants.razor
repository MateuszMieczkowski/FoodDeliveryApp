@page "/restaurants"
@page "/restaurants/{pageNumber:int}"
@inject IRestaurantApi RestaurantApi
@using UI.API
@using UI.API.Responses


@if (PagedResult is null)
{
    <div class="row mt-5">
        <Spinner></Spinner>
    </div>
}
else
{
    <div class="row">
        <h3 class="text-center">Restaurants</h3>
    </div>
    foreach (var restaurant in PagedResult.Result)
    {
        <RestaurantCard Restaurant="@restaurant"></RestaurantCard>
    }
    <div class="row mt-3">
        <Pagination CurrentPage="@PagedResult.CurrentPageNumber" PagesCount="@PagedResult.PageCount" Href="/restaurants"></Pagination>
    </div>
    <div class="row mt-3">
        <PageSize></PageSize>
    </div>
    
}

@code {

    [Parameter]
    public int? PageNumber { get; set; }

    private PagedResult<Restaurant>? PagedResult { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        PagedResult = await RestaurantApi.GetRestaurants(null, null, null, null, 1, 15);
    }

    public override async Task SetParametersAsync(ParameterView parameters)
    {
        await base.SetParametersAsync(parameters);
        PageNumber = PageNumber ?? 1;
        PagedResult = await RestaurantApi.GetRestaurants(null, null, null, null, PageNumber.Value, 15);
        StateHasChanged();
    }

}

