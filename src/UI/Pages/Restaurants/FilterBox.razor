@using System.Diagnostics;
@inject IFilterAPI FilterApi

<div class="card fixed-top" style="width: 18rem; margin-left: 18vw; margin-top: 25vh">
    <div class="card-body">
        <form>
            <div class="form-row m-2">
                <div class="form-group col">
                    <label for="city">City:</label>
                    <select class="form-control" id="city" @bind="@selectedCity">
                        <option value="">-- Select a city --</option>
                        @foreach(var city in cities)
                        {
                            <option value="@city">@city</option>
                        }
                    </select>
                </div>
                <div class="form-group col m-2">
                    <label for="category">Category:</label>
                    <select class="form-control" id="category" @bind="@selectedCategoryName">
                        <option value="">-- Select a category --</option>
                        @foreach(var category in restaurantCategories)
                        {
                            <option value="@category.Name">@category.Name</option>
                        }
                    </select>
                </div>
            </div>
            <div class="row m-1 text-center">
                <button type="button" class="btn btn-outline-dark text-center" @onclick="@(async () => await FilterHandler(selectedCity, selectedCategoryName))">Filter</button>
            </div>
            
        </form>
    </div>
</div>

@code {
    private string? selectedCity;
    private string? selectedCategoryName;
    private IEnumerable<RestaurantCategory> restaurantCategories = Enumerable.Empty<RestaurantCategory>();
    private IEnumerable<string> cities = Enumerable.Empty<string>();

    [Parameter]
    public Func<string?, string?, Task> FilterHandler { get; set; } = default!;

    protected async override Task OnInitializedAsync()
    {
        var restaurantCategoriesTask = FilterApi.GetRestaurantCategories();
        var citiesTask = FilterApi.GetCities();
        restaurantCategories = await restaurantCategoriesTask;
        cities = await citiesTask;

        await base.OnInitializedAsync();
    }
}